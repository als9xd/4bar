<!DOCTYPE html>
<html lang="en">
  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>4BAR - Tournaments - {{tournament_data.name}}</title>
    
    <link ref="icon" href="/site/logo.png">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Raleway:400,700" rel="stylesheet">

    <link href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet"/>

    <link rel="stylesheet" href="/css/public.css">
    <link rel="stylesheet" href="/css/sidebar.css">
    <link rel="stylesheet" href="/css/friends_list.css">
    <link rel="stylesheet" href="/css/results_tables.css">

    <script src="/socket.io/socket.io.js"></script>
    <script type="text/javascript">let socket = io('/private');</script>
    
 </head>

  <body>

    <div id="wrapper" data-toggle-on='false'>

      <!-- Friends List -->
      <div class="btn-group dropup" id="friends">
        <button type="button" id="friends-toggle" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          <h5>Friends</h5>
        </button>
        <div class="dropdown-menu" id="friends-menu">
        </div>
      </div>

      <!-- Navbar -->
      <nav id="navbar-wrapper" class="navbar navbar-toggleable-sm navbar-inverse bg-inverse fixed-top navbar-expand-sm">
        <div class="navbar-brand">
          <button class="sidebar-toggler" type="button" aria-expanded="false" aria-label="Toggle navigation" id="menu-toggle">
            <span class="sidebar-toggler-icon"></span>
          </button>
          <a class="navbar-brand" href="/home">4bar.org</a>
        </div>

        <div class="collapse navbar-collapse">
          <ul class="navbar-nav mr-auto">
            <li class="nav-item nav-auto-spacing">
              <form id="search-form" class="form-inline my-2 my-md-0" action="/search" method="GET">
                <input name="query" class="form-control mr-sm-2">
              </form>
            </li>
            <li class="nav-item nav-auto-spacing">
              <button class="btn btn-outline-success my-2 my-sm-0" onclick="document.getElementById('search-form').submit()" for="submit-search-form" >Search</button>
            </li>
          </ul>
          <ul class="navbar-nav ml-auto">
            {{#if t_edit_privileges}}
            <li class="nav-item nav-auto-spacing edit-tournament-btn">
                <a href="/edit_tournament?id={{tournament_data.id}}"><button class="btn btn-outline-primary my-2 my-sm-0">Edit Tournament</button></a>
            </li>
            {{/if}}
            <li class="nav-item nav-auto-spacing">
                <button class="btn btn-outline-primary my-2 my-sm-0 toggle-membership-btn" data-is-member="{{t_is_member}}" onclick="toggle_membership();">{{#if t_is_member}}Leave Tournament{{else}}Join Tournament{{/if}}</button>
            </li>
            {{#if c_edit_privileges}}
            <li class="nav-item">
              <a class="nav-link" href="/tournament_creation?id={{community_data.id}}" data-toggle="tooltip" data-placement="bottom" title="Tournament Creation"><img src="/site/trophy.png" class="navbar-icon"></a>
            </li>
            {{/if}}
            <li class="nav-item">
              <a class="nav-link" href="/community_creation" id="community-creation-icon" data-toggle="tooltip" data-placement="bottom" title="Community Creation"><img src="/site/community-creation.png" class="navbar-icon"></a>
            </li>
            <li class="nav-item dropdown">
              <a class="nav-link" href="#" id="notification-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><img src="/site/notification.png"></a>
              <div id="notification-dropdown-menu" class="dropdown-menu dropdown-menu-right" aria-labelledby="notification-dropdown">
                <div class="dropdown-menu-head">
                  <h5 class="dropdown-item">Notifications<img src="site/settings.png" class="float-right"></h5> 
                </div>
              </div>
            </li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="profile-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><img src="{{#if user_data.avatar includeZero=true}}/avatars/{{{user_data.avatar}}}{{else}}/site/no-avatar.jpg{{/if}}"></a>
              <div id="profile-dropdown-menu" class="dropdown-menu dropdown-menu-right" aria-labelledby="profile-dropdown">
                <a class="dropdown-menu-head dropdown-item" href="/profile?id={{user_data.id}}">
                  <h5 class="dropdown-item">{{user_data.username}}</h5> 
                  <h6 class="dropdown-item">{{user_data.email}}</h6> 
                </a>
                <a class="dropdown-item" href="/profile?id={{user_data.id}}">My Profile</a>
                <a class="dropdown-item" href="/logout">Logout</a>
              </div>
            </li>
          </ul>
        </div>
      </nav>
      <!-- /Navbar -->

      <!-- Sidebar -->
      <div id="sidebar-wrapper">
          <ul class="sidebar-nav">
              <li class="sidebar-collapse">
                <form class="form-inline my-2 my-md-0" action="/search" method="GET">
                  <input name="query" class="form-control mr-sm-2 search-query-input">
                  <button class="btn btn-outline-success my-2 my-sm-0" type="submit" >Search</button>
                </form>
              </li>
              <li class="sidebar-collapse">
                <a href="/profile?id={{user_data.id}}">My Profile</a>
              </li>
              <li class="sidebar-collapse">
                  <a href="/community_creation">Community Creation</a>
              </li>
              {{#if t_edit_privileges}}
              <li class="sidebar-collapse sidebar-btn edit-tournament-btn">
                  <a href="/edit_tournament?id={{tournament_data.id}}"><button class="btn btn-outline-primary my-2 my-sm-0">Edit Tournament</button></a>
              </li>
              {{/if}}
              <li class="sidebar-collapse sidbar-btn">
                  <button class="btn btn-outline-primary my-2 my-sm-0 toggle-membership-btn" data-is-member="{{t_is_member}}" onclick="toggle_membership();">{{#if t_is_member}}Leave Tournament{{else}}Join Tournament{{/if}}</button>
              </li>
              <li class="sidebar-collapse">
                <hr>
              </li>
              <li>
                  <a href="/home">Home</a>
              </li>
              <li>
                  <a href="/marketplace">Marketplace</a>
              </li>
              <li>
                <a href="/calendar">Calendar</a>
              </li>
              <li>
                <a href="/geolocation">Nearby Events</a>
              </li>
              <li>
                <hr>
              </li>
              <li>
                <a class="sidebar-title" href="/profile?active_field=communities"><h5>Communities</h5></a>
              </li>
              {{#each user_data.communities}}
              <li>
                  <a href="/communities?id={{id}}"><img src="{{#if icon includeZero=true}}/icons/{{icon}}{{else}}/site/no-icon.jpg{{/if}}">{{name}}</a>
              </li>
              {{/each}}
              <li>
                <hr>
              </li>
              <li>
                <a class="sidebar-title" href="/profile?active_field=tournaments"><h5>Tournaments</h5></a>
              </li>
              {{#each user_data.tournaments}}
              <li>
                  <a href="/tournaments?id={{id}}">{{name}}</a>
              </li>
              {{/each}}
          </ul>
      </div>
      <!-- /Sidebar -->

      <!-- Page Content -->
      <div id="page-content-wrapper">
          
          <div class="container-fluid">
            <h1>{{tournament_data.name}}</h1>
            <a href="communities?id={{community_data.id}}"><h6>{{community_data.name}}</h6></a>
            <hr/>
            <button onclick="GenerateTournament()">Generate Tournament Brackets</button> <!--Make button only show up when no rows exist with tournament_id (when coms is empty).-->
            <div class="Tournament_bracket"></div>
          </div>
      </div>
      <!-- /Page Content -->
    </div>
    <!-- /Main Wrapper -->

    <!-- Load jquery -->
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>

    <!-- Load Booststrap -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>

    <!-- Load notification handler. Used to display notifications sent from the server through socket.io -->
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script src="/js/NotificationHandler.js"></script>
    <script type="text/javascript">
      let ntf_hndlr = NotificationHandler(
        toastr,
        socket
      );
    </script>

    <!-- Dropdown Notifications -->
    <script src="/js/DropdownNotificationsDefinitions.js"></script>
    <script src="/js/DropdownNotificationsHandler.js"></script>
    <script type="text/javascript">
      let dd_ntf_hndler = DropdownNotificationsHandler(
        socket,
        DropdownNotificationsDefinitions
      );
    </script>

    <!-- Friends List -->
    <script type="text/javascript" src="/js/FriendsListHandler.js"></script>
    <script type="text/javascript">
      let fl_hndler = FriendsListHandler(socket);
    </script>

    <!-- Menu Toggle Script -->
    <script src="/js/Sidebar.js"></script>

    <!-- Enable Tooltips -->    
    <script type="text/javascript">
      $(document).ready(function(){
        $('[data-toggle="tooltip"]').tooltip();
      });
    </script>

    <!-- Toggle tournament membership -->    
    <script>
      let toggle_membership_btns = document.getElementsByClassName('toggle-membership-btn');
      let edit_tournament_btns = document.getElementsByClassName('edit-tournament-btn');
      function toggle_membership(){
        socket.emit('toggle_tournament_membership',{{{tournament_data.id}}});
        for(let i = 0; i < toggle_membership_btns.length;i++){
          if(toggle_membership_btns[i].getAttribute('data-is-member') == 'false'){
            toggle_membership_btns[i].innerHTML = 'Leave Tournament';
            toggle_membership_btns[i].setAttribute('data-is-member','true');
          }
          else if(toggle_membership_btns[i].getAttribute('data-is-member') == 'true'){
            toggle_membership_btns[i].innerHTML = 'Join Tournament';
            toggle_membership_btns[i].setAttribute('data-is-member','false');
            for(let j = 0; j < edit_tournament_btns.length;j++){
              edit_tournament_btns[j].style.display = "none";
            }
          }
        }
      }

    </script>

    <!-- Bracket Building -->
    <script type="text/javascript">
    var tournament_ID = Number("{{tournament_data.id}}");
    var tournament_brackets = socket.emit('get_brackets',{
        tournament_ID
        }).bracket_nodes;
    if (typeof tournament_brackets == 'undefined'){
      tournament_brackets = [];
    }
    //console.log(typeof tournament_ID);
    var tournament_participants = socket.emit('get_participants',{
        tournament_ID
        }).participants;
    if (typeof tournament_participants == 'undefined'){
      tournament_participants = [];
    }
    $( ".Tournament_bracket" ).append(Display_Brackets(tournament_brackets,null)); //Use jQuery to append html element with already generated brackets  

    function GenerateTournament()
    {
      var nodes = tournament_brackets;
      var teams = tournament_participants;
      //Should remove entries in forest table with tournament_id. But for the time being it won't.
      //Just returns if brackets already exist for this tournament.
      if(nodes.length>0 || teams.length == 0){
        return;
      }
      //Get number of teams
      var teamNum = teams.length;
      var Depth = Math.floor(Math.log(teamNum));
      generate_tree(null, Depth, nodes, teams);
      //leafNodes = list of teams in forest with tournament_id
      var leafNodes = socket.emit('get_bracket_nodes',{
          tournament_ID
        }).bracket_nodes;
      //RemainingTeams = list of teams not in tournament and not in forest.
      var RemainingTeams = [];
      var allTeams; //all teams present in leafNodes
      for(let c in leafNodes){
        if(leafNodes[c].player_id !=null && allTeams.indexOf(leafNodes[c].player_id)<0/*leafNode[c].player not in allTeams*/){
          allTeams+=leafNodes[c].player_id;
        }
      }
      for(let t in teams){
        var found = false;
        for(let s in allTeams){
          if(teams[t].user_id == allTeams[s]){
            found = true;
          }
        }
        if(found==false){
          RemainingTeams+=teams[t].user_id;
        }
      }
      for(let team in remainingTeams){
        //Retrieve random leafNode and edit the player to be Null
        var randNode = leafNodes[Math.floor(Math.random() * leafNodes.length)];
        socket.emit('update_bracket_node',{ //update row to have null player_id
          node_id: data.id,
          player_id: null
        });
        //Save a new node with previous leafNode node as parent and leafNode player as player.
        socket.emit('add_bracket_node',{ //Adds row to table
          tournament_id : tournament_ID,
          parent_id: randNode.id,
          player_id: randNode.player_id
        });
        //Save a new node with previous leafNode node as parent and team as player.
        socket.emit('add_bracket_node',{ //Adds row to table
          tournament_id : tournament_ID,
          parent_id: randNode.id,
          player_id: remainingTeams[team]
        });
        //remove leafNode node from leafNode list.
        var index = leafNodes.indexOf(randNode);
        if (index > -1) {
           leafNodes.splice(index, 1);
        }
      }
      nodes = socket.emit('get_bracket_nodes',{
        tournament_ID
      }).bracket_nodes;
      ($Tournament_bracket).append(Display_Brackets(nodes,null)); //Use jQuery to append html element with id == Tournament_bracket with the generated tree.
      return;
    }
    function generate_tree(parent, Depth, nodes, teams)
    {
      if (teams.length == 0){
      return;
      }
      var allTeams; //all teams present in nodes
      var notIncluded; //all teams not present in nodes
      for(let c in nodes){
        if(nodes[c].player_id !=null && allTeams.indexOf(nodes[c].player_id)<0/*cams[c].player not in allTeams*/){
          allTeams+=nodes[c].player;
        }
      }
      if(Depth==0){
        //Save a new node with random player (from list of teams in tournament and not in forest)
        for(let t in teams){
          var found = false;
          for(let s in allTeams){
            if(teams[t].user_id == allTeams[s]){
              found = true;
            }
          }
          if(found==false){
            notIncluded+=teams[t].user_id;
          }
        }
        //data = {parent_id: parent, player_id:notIncluded[Math.floor(Math.random() * notIncluded.length)]};
        socket.emit('add_bracket_node',{ //Adds row to table
          tournament_id : tournament_ID,
          parent_id: parent,
          player_id: notIncluded[Math.floor(Math.random() * notIncluded.length)]
        });
        return;
      }
      //Save new node to forest table with id == node_id and parent==parent
      //data = {parent_id: parent,data.player_id:null};
      node_id = socket.emit('add_bracket_node',{ //Adds row to table
            tournament_id : tournament_ID,
            parent_id: parent,
            player_id: null
          }).last_node_id;
      nodes = socket.emit('get_bracket_nodes',{
          tournament_ID
        }).bracket_nodes;
      generate_tree(node_id, Depth-1, nodes, teams);
      generate_tree(node_id, Depth-1, nodes, teams);
      return;
    }
    function Display_Brackets(nodes,id)
    {
      //children = list of nodes with id as parent
      if(nodes.length == 0 ){
      return;
      }
      console.log(nodes);
      var children = nodes.filter(function(element){ return element.parent_id == id; });
      var thisNode = (nodes.filter(function(element){ return element.id == id; })[0]);
      var player = (thisNode.player_id == null? "": thisNode.player_id);
      var NewHTML = "<div>"+player+"</div>";
      if (children.length>0){
        NewHTML+="<ul>";
        for(let child in children){
          NewHTML+="<li>"+Display_Brackets(nodes,children[child])+"</li>";
        }
        NewHTML+="</ul>";
      }
      return NewHTML;
    }
    </script>

  </body>

</html>
